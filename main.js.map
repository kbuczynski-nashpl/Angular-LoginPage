{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/login-page/login-page.component.ts","./src/app/components/login-page/login-page.component.html","./src/app/components/social-auth-buttons/social-auth-buttons.component.ts","./src/app/components/social-auth-buttons/social-auth-buttons.component.html","./src/app/components/term-cond-dialog/term-cond-dialog.component.ts","./src/app/components/term-cond-dialog/term-cond-dialog.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'login-page-angular';\n}\n","<div class=\"container vh-100\">\n    <login-page class=\"vh-100 d-flex justify-content-center\"></login-page>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule }      from '@angular/core';\n\nimport { AppRoutingModule }                 from './app-routing.module';\nimport { AppComponent }                     from './app.component';\nimport { LoginPageComponent }               from './components/login-page/login-page.component';\nimport { TermCondDialogComponent }          from './components/term-cond-dialog/term-cond-dialog.component';\nimport { NgbModule }                        from '@ng-bootstrap/ng-bootstrap';\nimport { BrowserAnimationsModule }          from '@angular/platform-browser/animations';\nimport { MatFormFieldModule }               from '@angular/material/form-field';\nimport { MatInputModule }                   from \"@angular/material/input\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { MatIconModule }                    from \"@angular/material/icon\";\nimport { MatButtonModule }                  from \"@angular/material/button\";\nimport { MatCheckboxModule }                from \"@angular/material/checkbox\";\nimport { FontAwesomeModule }                from '@fortawesome/angular-fontawesome';\nimport { MatTabsModule }                    from \"@angular/material/tabs\";\nimport { MatDatepickerModule }              from \"@angular/material/datepicker\";\nimport { MatNativeDateModule }              from \"@angular/material/core\";\nimport { MatDialogModule }                  from \"@angular/material/dialog\";\nimport { SocialAuthButtonsComponent } from './components/social-auth-buttons/social-auth-buttons.component';\n\n@NgModule(\n  {\n    declarations: [\n      AppComponent,\n      LoginPageComponent,\n      TermCondDialogComponent,\n      SocialAuthButtonsComponent\n    ],\n    imports:      [\n      BrowserModule,\n      AppRoutingModule,\n      NgbModule,\n      BrowserAnimationsModule,\n      MatFormFieldModule,\n      MatInputModule,\n      FormsModule,\n      ReactiveFormsModule,\n      MatIconModule,\n      MatButtonModule,\n      MatCheckboxModule,\n      FontAwesomeModule,\n      MatTabsModule,\n      MatDatepickerModule,\n      MatNativeDateModule,\n      MatDialogModule\n    ],\n    providers:    [],\n    bootstrap:    [AppComponent]\n  }\n)\nexport class AppModule {\n}\n","import { Component, OnInit }             from '@angular/core';\nimport { Form, FormControl, Validators } from \"@angular/forms\";\nimport { MatDialog, MatDialogConfig }    from \"@angular/material/dialog\";\nimport { TermCondDialogComponent }       from \"../term-cond-dialog/term-cond-dialog.component\";\n\n\n@Component(\n  {\n    selector:    'login-page',\n    templateUrl: './login-page.component.html',\n    styleUrls:   ['./login-page.component.scss'],\n  }\n)\nexport class LoginPageComponent implements OnInit {\n  loginEmail: FormControl;\n  signupEmail: FormControl;\n  loginPassword: FormControl;\n  signupPassword: FormControl;\n  reSignupPassword: FormControl;\n  signupDatepickerDob: FormControl;\n  password: string;\n  hide: boolean;\n  rehide: boolean;\n  rememberPassword: boolean;\n  tc: boolean;\n\n  constructor(public dialog: MatDialog) {\n  }\n\n  ngOnInit(): void {\n    this.hide             = true;\n    this.rehide           = true;\n    this.rememberPassword = false;\n    this.tc               = false;\n\n    this.loginEmail = new FormControl('', [\n      Validators.required,\n      Validators.email\n    ]);\n\n    this.signupEmail = new FormControl('', [\n      Validators.required,\n      Validators.email\n    ]);\n\n    this.loginPassword = new FormControl('', [\n      Validators.required\n    ]);\n\n    this.signupPassword = new FormControl('', [\n      Validators.required\n    ]);\n\n    this.reSignupPassword = new FormControl('', [\n      Validators.required\n    ]);\n\n    this.signupDatepickerDob = new FormControl('', [\n      Validators.required\n    ]);\n  }\n\n  /**\n   * return error message for login email input\n   *\n   */\n  getLoginEmailErrorMessage(): string {\n    if (this.loginEmail.hasError('required')) {\n      return 'You must enter a value';\n    }\n\n    return this.loginEmail.hasError('email') ? 'Not a valid email' : '';\n  }\n\n  /**\n   * return error message for signup email input\n   */\n  getSignupEmailErrorMessage(): string {\n    if (this.signupEmail.hasError('required')) {\n      return 'You must enter a value';\n    }\n\n    return this.signupEmail.hasError('email') ? 'Not a valid email' : '';\n  }\n\n  getLoginPasswordErrorMessage(): string {\n    return this.loginPassword.hasError('required') ? 'You must enter a value' : '';\n  }\n\n  getSignupPasswordErrorMessage(): string {\n    return this.signupPassword.hasError('required') ? 'You must enter a value' : '';\n  }\n\n  getSignupRePasswordErrorMessage(): string {\n    return this.reSignupPassword.hasError('required') ? 'You must enter a value' : '';\n  }\n\n  getSignupDatepickerDobErrorMessage(): string {\n    return this.signupDatepickerDob.hasError('required') ? 'You must enter a date' : '';\n  }\n\n  /**\n   * Open Dialog with T&C condition component\n   */\n  openTCDialog(): void {\n    const dialog     = new MatDialogConfig();\n    dialog.autoFocus = false;\n\n    this.dialog.open(TermCondDialogComponent, dialog);\n  }\n}\n","<div class=\"auth-component\">\n  <div class=\"auth-header\">\n    <h1>Welcome</h1>\n  </div>\n  <mat-tab-group mat-align-tabs=\"center\" class=\"h-100\">\n    <mat-tab label=\"Login\" class=\"h-100\">\n      <div class=\"auth-form mt-5\">\n        <section>\n          <!-- Email input element --->\n          <mat-form-field appearance=\"fill\" class=\"w-100\">\n            <mat-label>Enter your email</mat-label>\n            <input matInput placeholder=\"pat@example.com\" [formControl]=\"loginEmail\" required type=\"email\">\n            <mat-error *ngIf=\"loginEmail.invalid\">{{getLoginEmailErrorMessage()}}</mat-error>\n          </mat-form-field>\n          <!-- Password input element -->\n          <mat-form-field appearance=\"fill\" class=\"w-100\">\n            <mat-label>Enter your password</mat-label>\n            <input matInput [type]=\"hide ? 'password' : 'text'\" required [formControl]=\"loginPassword\">\n            <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\"\n                    [attr.aria-pressed]=\"hide\">\n              <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n            </button>\n            <mat-error *ngIf=\"loginPassword.invalid\">{{getLoginPasswordErrorMessage()}}</mat-error>\n          </mat-form-field>\n        </section>\n        <section class=\"mt-2\">\n          <mat-checkbox class=\"ml-3\" [(ngModel)]=\"rememberPassword\">Remember Password</mat-checkbox>\n        </section>\n        <hr>\n        <social-auth-buttons name=\"Login\"></social-auth-buttons>\n      </div>\n    </mat-tab>\n    <mat-tab label=\"Sign Up\" class=\"h-100\">\n      <div class=\"auth-form mt-5\">\n        <section>\n          <!-- Email input element --->\n          <mat-form-field appearance=\"fill\" class=\"w-100\">\n            <mat-label>Enter your email</mat-label>\n            <input matInput placeholder=\"pat@example.com\" [formControl]=\"signupEmail\" required type=\"email\">\n            <mat-error *ngIf=\"signupEmail.invalid\">{{getSignupEmailErrorMessage()}}</mat-error>\n          </mat-form-field>\n          <!-- Password input element -->\n          <mat-form-field appearance=\"fill\" class=\"w-100\">\n            <mat-label>Enter your password</mat-label>\n            <input matInput [type]=\"hide ? 'password' : 'text'\" required [formControl]=\"signupPassword\">\n            <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\"\n                    [attr.aria-pressed]=\"hide\">\n              <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n            </button>\n            <mat-error *ngIf=\"signupPassword.invalid\">{{getSignupPasswordErrorMessage()}}</mat-error>\n          </mat-form-field>\n          <!-- Password input element -->\n          <mat-form-field appearance=\"fill\" class=\"w-100\">\n            <mat-label>Confim your password</mat-label>\n            <input matInput [type]=\"hide ? 'password' : 'text'\" required>\n            <button mat-icon-button matSuffix (click)=\"rehide = !rehide\" [attr.aria-label]=\"'Hide password'\"\n                    [attr.aria-pressed]=\"hide\" [formControl]=\"reSignupPassword\" name=\"reSignupPassword\" ngDefaultControl>\n              <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n            </button>\n            <mat-error *ngIf=\"reSignupPassword.invalid\">{{getSignupRePasswordErrorMessage()}}</mat-error>\n          </mat-form-field>\n          <!-- DOB Date picker -->\n          <mat-form-field color=\"accent\" appearance=\"fill\" class=\"w-100\">\n            <mat-label>Your Date of Birth</mat-label>\n            <input matInput [matDatepicker]=\"picker1\" (click)=\"picker1.open()\" readonly required\n                   [formControl]=\"signupDatepickerDob\">\n            <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\n            <mat-datepicker disabled=\"false\" touchUi #picker1 color=\"primary\" class=\"w-100\"></mat-datepicker>\n            <mat-error *ngIf=\"signupDatepickerDob.invalid\">{{getSignupDatepickerDobErrorMessage()}}</mat-error>\n          </mat-form-field>\n        </section>\n        <section class=\"row m-0 mt-2\">\n          <mat-checkbox class=\"ml-3\" [(ngModel)]=\"tc\" required>Confirm</mat-checkbox>\n          <div class=\"tc-checkbox-label\"><span class=\"tc-anchor\"\n                                               (click)=\"openTCDialog()\">&nbsp;Terms & Conditions </span></div>\n        </section>\n        <hr>\n        <social-auth-buttons name=\"Sign Up\"></social-auth-buttons>\n      </div>\n    </mat-tab>\n  </mat-tab-group>\n</div>\n","import { Component, Input, OnInit }                               from '@angular/core';\nimport { faGithub, faGoogle, faInstagram, faLinkedin, faTwitter } from \"@fortawesome/free-brands-svg-icons\";\n\n@Component(\n  {\n    selector:    'social-auth-buttons',\n    templateUrl: './social-auth-buttons.component.html',\n    styleUrls:   ['./social-auth-buttons.component.scss']\n  }\n)\nexport class SocialAuthButtonsComponent implements OnInit {\n  @Input() name: string;\n  hover: boolean;\n\n  faGoogle    = faGoogle;\n  faTwitter   = faTwitter\n  faGithub    = faGithub;\n  faLinkedIn  = faLinkedin;\n  faInstagram = faInstagram;\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n    this.hover = false;\n  }\n\n  /**\n   * Change hover on single element\n   *\n   * @param event\n   */\n  changeHover(event): void {\n    this.hover    = event.type == 'mouseover';\n    const element = event.target;\n\n    if (element.classList.contains('mat-button-wrapper')) {\n      return;\n    }\n\n    if (this.hover) {\n      element.classList.remove('mat-elevation-z4');\n      element.classList.add('mat-elevation-z12');\n\n      return;\n    }\n\n    element.classList.remove('mat-elevation-z12');\n    element.classList.add('mat-elevation-z4');\n  }\n\n}\n","<section>\n  <button class=\"w-100 mat-elevation-z4\"\n          (mouseover)=\"changeHover($event)\"\n          (mouseleave)=\"changeHover($event)\"\n          mat-raised-button\n          color=\"primary\">{{name}}\n  </button>\n</section>\n<hr>\n<section class=\"social-login\">\n  <div>\n    <button class=\"btn-social btn-login-google w-100\"\n            (mouseover)=\"changeHover($event)\"\n            (mouseleave)=\"changeHover($event)\"\n            mat-raised-button>\n      <fa-icon [icon]=\"faGoogle\"></fa-icon>\n      {{name}} with Google\n    </button>\n  </div>\n  <div>\n    <button class=\"btn-social btn-login-twitter w-100\"\n            (mouseover)=\"changeHover($event)\"\n            (mouseleave)=\"changeHover($event)\"\n            mat-raised-button>\n      <fa-icon [icon]=\"faTwitter\"></fa-icon>\n      {{name}} with Twitter\n    </button>\n  </div>\n  <div>\n    <button class=\"btn-social btn-login-github w-100\"\n            (mouseover)=\"changeHover($event)\"\n            (mouseleave)=\"changeHover($event)\"\n            mat-raised-button>\n      <fa-icon [icon]=\"faGithub\"></fa-icon>\n      {{name}} with GitHub\n    </button>\n  </div>\n  <div>\n    <button class=\"btn-social btn-login-linkedIn w-100\"\n            (mouseover)=\"changeHover($event)\"\n            (mouseleave)=\"changeHover($event)\"\n            mat-raised-button>\n      <fa-icon [icon]=\"faLinkedIn\"></fa-icon>\n      {{name}} with LinkedIn\n    </button>\n  </div>\n  <div>\n    <button class=\"btn-social btn-login-instagram w-100\"\n            (mouseover)=\"changeHover($event)\"\n            (mouseleave)=\"changeHover($event)\"\n            mat-raised-button>\n      <fa-icon [icon]=\"faInstagram\"></fa-icon>\n      {{name}} with Instagram\n    </button>\n  </div>\n</section>\n","import { Component } from '@angular/core';\n\n@Component(\n  {\n    selector:    'app-term-cond-dialog',\n    templateUrl: './term-cond-dialog.component.html',\n    styleUrls:   ['./term-cond-dialog.component.scss']\n  }\n)\nexport class TermCondDialogComponent {\n\n  constructor() {\n  }\n\n}\n","<h2 mat-dialog-title>Install Angular</h2>\n<mat-dialog-content class=\"mat-typography\">\n  <h3>Develop across all platforms</h3>\n  <p>Learn one way to build applications with Angular and reuse your code and abilities to build\n    apps for any deployment target. For web, mobile web, native mobile and native desktop.</p>\n\n  <h3>Speed &amp; Performance</h3>\n  <p>Achieve the maximum speed possible on the Web Platform today, and take it further, via Web\n    Workers and server-side rendering. Angular puts you in control over scalability. Meet huge\n    data requirements by building data models on RxJS, Immutable.js or another push-model.</p>\n\n  <h3>Incredible tooling</h3>\n  <p>Build features quickly with simple, declarative templates. Extend the template language with\n    your own components and use a wide array of existing components. Get immediate Angular-specific\n    help and feedback with nearly every IDE and editor. All this comes together so you can focus\n    on building amazing apps rather than trying to make the code work.</p>\n\n  <h3>Loved by millions</h3>\n  <p>From prototype through global deployment, Angular delivers the productivity and scalable\n    infrastructure that supports Google's largest applications.</p>\n\n  <h3>What is Angular?</h3>\n\n  <p>Angular is a platform that makes it easy to build applications with the web. Angular\n    combines declarative templates, dependency injection, end to end tooling, and integrated\n    best practices to solve development challenges. Angular empowers developers to build\n    applications that live on the web, mobile, or the desktop</p>\n\n  <h3>Architecture overview</h3>\n\n  <p>Angular is a platform and framework for building client applications in HTML and TypeScript.\n    Angular is itself written in TypeScript. It implements core and optional functionality as a\n    set of TypeScript libraries that you import into your apps.</p>\n\n  <p>The basic building blocks of an Angular application are NgModules, which provide a compilation\n    context for components. NgModules collect related code into functional sets; an Angular app is\n    defined by a set of NgModules. An app always has at least a root module that enables\n    bootstrapping, and typically has many more feature modules.</p>\n\n  <p>Components define views, which are sets of screen elements that Angular can choose among and\n    modify according to your program logic and data. Every app has at least a root component.</p>\n\n  <p>Components use services, which provide specific functionality not directly related to views.\n    Service providers can be injected into components as dependencies, making your code modular,\n    reusable, and efficient.</p>\n\n  <p>Both components and services are simply classes, with decorators that mark their type and\n    provide metadata that tells Angular how to use them.</p>\n\n  <p>The metadata for a component class associates it with a template that defines a view. A\n    template combines ordinary HTML with Angular directives and binding markup that allow Angular\n    to modify the HTML before rendering it for display.</p>\n\n  <p>The metadata for a service class provides the information Angular needs to make it available\n    to components through Dependency Injection (DI).</p>\n\n  <p>An app's components typically define many views, arranged hierarchically. Angular provides\n    the Router service to help you define navigation paths among views. The router provides\n    sophisticated in-browser navigational capabilities.</p>\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n  <button mat-button mat-dialog-close>Close</button>\n</mat-dialog-actions>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}